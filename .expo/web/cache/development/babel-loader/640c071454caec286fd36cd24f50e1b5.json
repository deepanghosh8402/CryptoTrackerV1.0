{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"width\", \"height\"];\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useCandlestickChart } from \"./useCandlestickChart\";\nexport var CandlestickChartDimensionsContext = React.createContext({\n  width: 0,\n  height: 0\n});\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width;\n\nexport function CandlestickChart(_ref) {\n  var children = _ref.children,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? screenWidth : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? screenWidth : _ref$height,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useCandlestickChart = useCandlestickChart(),\n      setWidth = _useCandlestickChart.setWidth,\n      setHeight = _useCandlestickChart.setHeight;\n\n  React.useEffect(function () {\n    setWidth(width);\n    setHeight(height);\n  }, [height, setHeight, setWidth, width]);\n  var contextValue = React.useMemo(function () {\n    return {\n      width: width,\n      height: height\n    };\n  }, [height, width]);\n  return React.createElement(CandlestickChartDimensionsContext.Provider, {\n    value: contextValue\n  }, React.createElement(View, props, children));\n}","map":{"version":3,"sources":["Chart.tsx"],"names":["CandlestickChartDimensionsContext","width","height","screenWidth","Dimensions","props","setHeight","useCandlestickChart","React","setWidth","contextValue"],"mappings":";;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAGA,SAAA,mBAAA;AAEA,OAAO,IAAMA,iCAAiC,GAAG,KAAK,CAAL,aAAA,CAAoB;AACnEC,EAAAA,KAAK,EAD8D,CAAA;AAEnEC,EAAAA,MAAM,EAAE;AAF2D,CAApB,CAA1C;;AAWP,sBAA+BE,UAAU,CAAVA,GAAAA,CAA/B,QAA+BA,CAA/B;AAAA,IAAeD,WAAf,mBAAQF,KAAR;;AAEA,OAAO,SAAA,gBAAA,OAKmB;AAAA,MALO,QAKP,QALO,QAKP;AAAA,wBAHxBA,KAGwB;AAAA,MAHxBA,KAGwB,2BALO,WAKP;AAAA,yBAFxBC,MAEwB;AAAA,MAFxBA,MAEwB,4BALO,WAKP;AAAA,MADrBG,KACqB;;AACxB,6BAAgCE,mBAAhC,EAAA;AAAA,MAAM,QAAN,wBAAM,QAAN;AAAA,MAAkBD,SAAlB,wBAAkBA,SAAlB;;AAEAE,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBC,IAAAA,QAAQ,CAARA,KAAQ,CAARA;AACAH,IAAAA,SAAS,CAATA,MAAS,CAATA;AAFFE,GAAAA,EAGG,CAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAHHA,KAGG,CAHHA;AAKA,MAAME,YAAY,GAAG,KAAK,CAAL,OAAA,CACnB;AAAA,WAAO;AACLT,MAAAA,KADK,EACLA,KADK;AAELC,MAAAA,MAAAA,EAAAA;AAFK,KAAP;AAAA,GADmB,EAKnB,CAAA,MAAA,EALF,KAKE,CALmB,CAArB;AAQA,SACE,KAAA,CAAA,aAAA,CAAC,iCAAD,CAAA,QAAA,EAAA;AAA4C,IAAA,KAAK,EAAEQ;AAAnD,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAFJ,QAEI,CADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { Dimensions, View, ViewProps } from 'react-native';\n\nimport { useCandlestickChart } from './useCandlestickChart';\n\nexport const CandlestickChartDimensionsContext = React.createContext({\n  width: 0,\n  height: 0,\n});\n\ntype CandlestickChartProps = ViewProps & {\n  children: React.ReactNode;\n  width?: number;\n  height?: number;\n};\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport function CandlestickChart({\n  children,\n  width = screenWidth,\n  height = screenWidth,\n  ...props\n}: CandlestickChartProps) {\n  const { setWidth, setHeight } = useCandlestickChart();\n\n  React.useEffect(() => {\n    setWidth(width);\n    setHeight(height);\n  }, [height, setHeight, setWidth, width]);\n\n  const contextValue = React.useMemo(\n    () => ({\n      width,\n      height,\n    }),\n    [height, width]\n  );\n\n  return (\n    <CandlestickChartDimensionsContext.Provider value={contextValue}>\n      <View {...props}>{children}</View>\n    </CandlestickChartDimensionsContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}