{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as shape from 'd3-shape';\nimport { scaleLinear } from 'd3-scale';\nexport function getArea(_ref) {\n  var data = _ref.data,\n      width = _ref.width,\n      height = _ref.height,\n      gutter = _ref.gutter,\n      _shape = _ref.shape,\n      yDomain = _ref.yDomain;\n  var timestamps = data.map(function (_, i) {\n    return i;\n  });\n  var scaleX = scaleLinear().domain([Math.min.apply(Math, _toConsumableArray(timestamps)), Math.max.apply(Math, _toConsumableArray(timestamps))]).range([0, width]);\n  var scaleY = scaleLinear().domain([yDomain.min, yDomain.max]).range([height - gutter, gutter]);\n  var area = shape.area().x(function (_, i) {\n    return scaleX(i);\n  }).y0(function (d) {\n    return scaleY(d.value);\n  }).y1(function () {\n    return height;\n  }).curve(_shape)(data);\n  return area;\n}","map":{"version":3,"sources":["getArea.ts"],"names":["shape","yDomain","timestamps","data","scaleX","scaleLinear","Math","scaleY","height","area","d"],"mappings":";AACA,OAAO,KAAP,KAAA,MAAA,UAAA;AAEA,SAAA,WAAA,QAAA,UAAA;AAIA,OAAO,SAAA,OAAA,OAcI;AAAA,MAda,IAcb,QAda,IAcb;AAAA,MAda,KAcb,QAda,KAcb;AAAA,MAda,MAcb,QAda,MAcb;AAAA,MAda,MAcb,QAda,MAcb;AAAA,MAda,MAcb,QATTA,KASS;AAAA,MARTC,OAQS,QARTA,OAQS;AACT,MAAMC,UAAU,GAAGC,IAAI,CAAJA,GAAAA,CAAS,UAAA,CAAA,EAAA,CAAA;AAAA,WAA5B,CAA4B;AAAA,GAATA,CAAnB;AAEA,MAAMC,MAAM,GAAGC,WAAW,GAAXA,MAAAA,CACL,CAACC,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAL,UAAK,EAAL,EAA0BA,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBADzBD,UACyB,EAA9B,CADKA,EAAAA,KAAAA,CAEN,CAAA,CAAA,EAFT,KAES,CAFMA,CAAf;AAGA,MAAME,MAAM,GAAGF,WAAW,GAAXA,MAAAA,CACL,CAACJ,OAAO,CAAR,GAAA,EAAcA,OAAO,CADhBI,GACL,CADKA,EAAAA,KAAAA,CAEN,CAACG,MAAM,GAAP,MAAA,EAFT,MAES,CAFMH,CAAf;AAGA,MAAMI,IAAI,GAAGT,KAAK,CAALA,IAAAA,GAAAA,CAAAA,CAER,UAAA,CAAA,EAAA,CAAA;AAAA,WAA2BI,MAAM,CAFzBJ,CAEyB,CAAjC;AAAA,GAFQA,EAAAA,EAAAA,CAGNU,UAAAA,CAAD;AAAA,WAA2BH,MAAM,CAACG,CAAC,CAH5BV,KAG0B,CAAjC;AAAA,GAHOA,EAAAA,EAAAA,CAIP;AAAA,WAJOA,MAIP;AAAA,GAJOA,EAAAA,KAAAA,CAAAA,MAAAA,EAAb,IAAaA,CAAb;AAMA,SAAA,IAAA;AACD","sourcesContent":["// @ts-ignore\nimport * as shape from 'd3-shape';\n// @ts-ignore\nimport { scaleLinear } from 'd3-scale';\n\nimport type { TLineChartData, YDomain } from '../types';\n\nexport function getArea({\n  data,\n  width,\n  height,\n  gutter,\n  shape: _shape,\n  yDomain,\n}: {\n  data: TLineChartData;\n  width: number;\n  height: number;\n  gutter: number;\n  shape?: unknown;\n  yDomain: YDomain;\n}): string {\n  const timestamps = data.map((_, i) => i);\n\n  const scaleX = scaleLinear()\n    .domain([Math.min(...timestamps), Math.max(...timestamps)])\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain([yDomain.min, yDomain.max])\n    .range([height - gutter, gutter]);\n  const area = shape\n    .area()\n    .x((_: unknown, i: number) => scaleX(i))\n    .y0((d: { value: unknown }) => scaleY(d.value))\n    .y1(() => height)\n    .curve(_shape)(data);\n  return area;\n}\n"]},"metadata":{},"sourceType":"module"}