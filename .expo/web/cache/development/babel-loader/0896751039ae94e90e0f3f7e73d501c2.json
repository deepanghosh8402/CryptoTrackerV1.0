{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"positiveColor\", \"negativeColor\", \"rectProps\", \"lineProps\", \"margin\", \"useAnimations\", \"renderRect\", \"renderLine\", \"candleProps\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Svg } from 'react-native-svg';\nimport { CandlestickChartDimensionsContext } from \"./Chart\";\nimport { CandlestickChartCandle } from \"./Candle\";\nimport { useCandlestickChart } from \"./useCandlestickChart\";\nexport function CandlestickChartCandles(_ref) {\n  var positiveColor = _ref.positiveColor,\n      negativeColor = _ref.negativeColor,\n      rectProps = _ref.rectProps,\n      lineProps = _ref.lineProps,\n      margin = _ref.margin,\n      _ref$useAnimations = _ref.useAnimations,\n      useAnimations = _ref$useAnimations === void 0 ? true : _ref$useAnimations,\n      renderRect = _ref.renderRect,\n      renderLine = _ref.renderLine,\n      candleProps = _ref.candleProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(CandlestickChartDimensionsContext),\n      width = _React$useContext.width,\n      height = _React$useContext.height;\n\n  var _useCandlestickChart = useCandlestickChart(),\n      data = _useCandlestickChart.data,\n      domain = _useCandlestickChart.domain,\n      step = _useCandlestickChart.step;\n\n  return React.createElement(Svg, _extends({\n    width: width,\n    height: height\n  }, props), step > 0 && data.map(function (candle, index) {\n    return React.createElement(CandlestickChartCandle, _extends({\n      key: index,\n      domain: domain,\n      margin: margin,\n      maxHeight: height,\n      width: step,\n      positiveColor: positiveColor,\n      negativeColor: negativeColor,\n      renderRect: renderRect,\n      renderLine: renderLine,\n      rectProps: rectProps,\n      lineProps: lineProps,\n      useAnimations: useAnimations,\n      candle: candle,\n      index: index\n    }, candleProps));\n  }));\n}","map":{"version":3,"sources":["Candles.tsx"],"names":["useAnimations","props","height","React","step","useCandlestickChart","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,GAAA,QAAA,kBAAA;AAEA,SAAA,iCAAA;AACA,SAAA,sBAAA;AACA,SAAA,mBAAA;AAgBA,OAAO,SAAA,uBAAA,OAW0B;AAAA,MAXO,aAWP,QAXO,aAWP;AAAA,MAXO,aAWP,QAXO,aAWP;AAAA,MAXO,SAWP,QAXO,SAWP;AAAA,MAXO,SAWP,QAXO,SAWP;AAAA,MAXO,MAWP,QAXO,MAWP;AAAA,gCAL/BA,aAK+B;AAAA,MAL/BA,aAK+B,mCAXO,IAWP;AAAA,MAXO,UAWP,QAXO,UAWP;AAAA,MAXO,UAWP,QAXO,UAWP;AAAA,MAXO,WAWP,QAXO,WAWP;AAAA,MAD5BC,KAC4B;;AAC/B,0BAA0BE,KAAK,CAALA,UAAAA,CAA1B,iCAA0BA,CAA1B;AAAA,MAAM,KAAN,qBAAM,KAAN;AAAA,MAAeD,MAAf,qBAAeA,MAAf;;AACA,6BAA+BG,mBAFA,EAE/B;AAAA,MAAM,IAAN,wBAAM,IAAN;AAAA,MAAM,MAAN,wBAAM,MAAN;AAAA,MAAsBD,IAAtB,wBAAsBA,IAAtB;;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,KAAK,EAAV,KAAA;AAAmB,IAAA,MAAM,EAAEF;AAA3B,GAAA,EAAA,KAAA,CAAA,EACGE,IAAI,GAAJA,CAAAA,IACC,IAAI,CAAJ,GAAA,CAAS,UAAA,MAAA,EAAA,KAAA;AAAA,WACP,KAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,QAAA,CAAA;AACE,MAAA,GAAG,EADL,KAAA;AAEE,MAAA,MAAM,EAFR,MAAA;AAGE,MAAA,MAAM,EAHR,MAAA;AAIE,MAAA,SAAS,EAJX,MAAA;AAKE,MAAA,KAAK,EALP,IAAA;AAME,MAAA,aAAa,EANf,aAAA;AAOE,MAAA,aAAa,EAPf,aAAA;AAQE,MAAA,UAAU,EARZ,UAAA;AASE,MAAA,UAAU,EATZ,UAAA;AAUE,MAAA,SAAS,EAVX,SAAA;AAWE,MAAA,SAAS,EAXX,SAAA;AAYE,MAAA,aAAa,EAZf,aAAA;AAaE,MAAA,MAAM,EAbR,MAAA;AAcE,MAAA,KAAK,EAAEE;AAdT,KAAA,EAJR,WAIQ,CAAA,CADO;AAAA,GAAT,CAFJ,CADF;AAwBD","sourcesContent":["import * as React from 'react';\nimport { Svg, SvgProps } from 'react-native-svg';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { CandlestickChartCandle, CandlestickChartCandleProps } from './Candle';\nimport { useCandlestickChart } from './useCandlestickChart';\n\ntype CandlestickChartCandlesProps = SvgProps & {\n  width?: number;\n  height?: number;\n  margin?: CandlestickChartCandleProps['margin'];\n  positiveColor?: CandlestickChartCandleProps['positiveColor'];\n  negativeColor?: CandlestickChartCandleProps['negativeColor'];\n  renderRect?: CandlestickChartCandleProps['renderRect'];\n  renderLine?: CandlestickChartCandleProps['renderLine'];\n  rectProps?: CandlestickChartCandleProps['rectProps'];\n  lineProps?: CandlestickChartCandleProps['lineProps'];\n  candleProps?: Partial<CandlestickChartCandleProps>;\n  useAnimations?: boolean;\n};\n\nexport function CandlestickChartCandles({\n  positiveColor,\n  negativeColor,\n  rectProps,\n  lineProps,\n  margin,\n  useAnimations = true,\n  renderRect,\n  renderLine,\n  candleProps,\n  ...props\n}: CandlestickChartCandlesProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { data, domain, step } = useCandlestickChart();\n\n  ////////////////////////////////////////////////\n\n  return (\n    <Svg width={width} height={height} {...props}>\n      {step > 0 &&\n        data.map((candle, index) => (\n          <CandlestickChartCandle\n            key={index as React.Key}\n            domain={domain}\n            margin={margin}\n            maxHeight={height}\n            width={step}\n            positiveColor={positiveColor}\n            negativeColor={negativeColor}\n            renderRect={renderRect}\n            renderLine={renderLine}\n            rectProps={rectProps}\n            lineProps={lineProps}\n            useAnimations={useAnimations}\n            candle={candle}\n            index={index}\n            {...candleProps}\n          />\n        ))}\n    </Svg>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}