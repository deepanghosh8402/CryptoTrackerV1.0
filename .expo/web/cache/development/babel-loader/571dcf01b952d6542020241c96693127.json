{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"xGutter\", \"yGutter\", \"tooltipTextProps\", \"textStyle\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedStyle, useDerivedValue, useSharedValue } from 'react-native-reanimated';\nimport { CandlestickChartDimensionsContext } from \"./Chart\";\nimport { useCandlestickChart } from \"./useCandlestickChart\";\nimport { CandlestickChartPriceText } from \"./PriceText\";\nexport var CandlestickChartCrosshairTooltipContext = React.createContext({\n  position: {\n    value: 'left'\n  }\n});\nexport function CandlestickChartCrosshairTooltip(_ref) {\n  var children = _ref.children,\n      _ref$xGutter = _ref.xGutter,\n      xGutter = _ref$xGutter === void 0 ? 8 : _ref$xGutter,\n      _ref$yGutter = _ref.yGutter,\n      yGutter = _ref$yGutter === void 0 ? 8 : _ref$yGutter,\n      tooltipTextProps = _ref.tooltipTextProps,\n      textStyle = _ref.textStyle,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(CandlestickChartDimensionsContext),\n      width = _React$useContext.width,\n      height = _React$useContext.height;\n\n  var _useCandlestickChart = useCandlestickChart(),\n      currentY = _useCandlestickChart.currentY;\n\n  var _React$useContext2 = React.useContext(CandlestickChartCrosshairTooltipContext),\n      position = _React$useContext2.position;\n\n  var elementHeight = useSharedValue(0);\n  var elementWidth = useSharedValue(0);\n  var handleLayout = React.useCallback(function (event) {\n    elementHeight.value = event.nativeEvent.layout.height;\n    elementWidth.value = event.nativeEvent.layout.width;\n  }, [elementHeight, elementWidth]);\n  var topOffset = useDerivedValue(function () {\n    var _f = function _f() {\n      var offset = 0;\n\n      if (currentY.value < elementHeight.value / 2 + yGutter) {\n        offset = currentY.value - (elementHeight.value / 2 + yGutter);\n      } else if (currentY.value + elementHeight.value / 2 > height - yGutter) {\n        offset = currentY.value + elementHeight.value / 2 - height + yGutter;\n      }\n\n      return offset;\n    };\n\n    _f._closure = {\n      currentY: currentY,\n      elementHeight: elementHeight,\n      yGutter: yGutter,\n      height: height\n    };\n    _f.asString = \"function _f(){const{currentY,elementHeight,yGutter,height}=jsThis._closure;{let offset=0;if(currentY.value<elementHeight.value/2+yGutter){offset=currentY.value-(elementHeight.value/2+yGutter);}else if(currentY.value+elementHeight.value/2>height-yGutter){offset=currentY.value+elementHeight.value/2-height+yGutter;}return offset;}}\";\n    _f.__workletHash = 12136525798041;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\CrosshairTooltip.js (38:36)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var tooltip = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        backgroundColor: 'white',\n        position: 'absolute',\n        display: 'flex',\n        padding: 4\n      };\n    };\n\n    _f._closure = {};\n    _f.asString = \"function _f(){return{backgroundColor:'white',position:'absolute',display:'flex',padding:4};}\";\n    _f.__workletHash = 16359369941874;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\CrosshairTooltip.js (49:35)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var leftTooltip = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        left: xGutter,\n        top: -(elementHeight.value / 2) - topOffset.value,\n        opacity: position.value === 'left' ? 1 : 0\n      };\n    };\n\n    _f._closure = {\n      xGutter: xGutter,\n      elementHeight: elementHeight,\n      topOffset: topOffset,\n      position: position\n    };\n    _f.asString = \"function _f(){const{xGutter,elementHeight,topOffset,position}=jsThis._closure;{return{left:xGutter,top:-(elementHeight.value/2)-topOffset.value,opacity:position.value==='left'?1:0};}}\";\n    _f.__workletHash = 12476970589172;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\CrosshairTooltip.js (55:39)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var rightTooltip = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        left: width - elementWidth.value - xGutter,\n        top: -(elementHeight.value / 2) - topOffset.value,\n        opacity: position.value === 'right' ? 1 : 0\n      };\n    };\n\n    _f._closure = {\n      width: width,\n      elementWidth: elementWidth,\n      xGutter: xGutter,\n      elementHeight: elementHeight,\n      topOffset: topOffset,\n      position: position\n    };\n    _f.asString = \"function _f(){const{width,elementWidth,xGutter,elementHeight,topOffset,position}=jsThis._closure;{return{left:width-elementWidth.value-xGutter,top:-(elementHeight.value/2)-topOffset.value,opacity:position.value==='right'?1:0};}}\";\n    _f.__workletHash = 15030436299146;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\CrosshairTooltip.js (60:40)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, _extends({\n    onLayout: handleLayout\n  }, props, {\n    style: [tooltip, leftTooltip, props.style]\n  }), children || React.createElement(CandlestickChartPriceText, _extends({}, tooltipTextProps, {\n    style: [styles.text, tooltipTextProps === null || tooltipTextProps === void 0 ? void 0 : tooltipTextProps.style, textStyle]\n  }))), React.createElement(Animated.View, _extends({}, props, {\n    style: [tooltip, rightTooltip, props.style]\n  }), children || React.createElement(CandlestickChartPriceText, _extends({}, tooltipTextProps, {\n    style: [styles.text, tooltipTextProps === null || tooltipTextProps === void 0 ? void 0 : tooltipTextProps.style, textStyle]\n  }))));\n}\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["CrosshairTooltip.tsx"],"names":["React","Animated","CandlestickChartPriceText","CandlestickChartCrosshairTooltipContext","position","value","xGutter","yGutter","props","height","currentY","useCandlestickChart","elementHeight","useSharedValue","elementWidth","handleLayout","event","topOffset","useDerivedValue","offset","tooltip","useAnimatedStyle","backgroundColor","display","padding","leftTooltip","left","top","opacity","rightTooltip","width","children","styles","tooltipTextProps","text","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type { StyleProp, TextStyle, ViewProps } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { useCandlestickChart } from './useCandlestickChart';\nimport {\n  CandlestickChartPriceText,\n  CandlestickChartPriceTextProps,\n} from './PriceText';\n\nexport type CandlestickChartCrosshairTooltipProps = ViewProps & {\n  children?: React.ReactNode;\n  xGutter?: number;\n  yGutter?: number;\n  tooltipTextProps?: CandlestickChartPriceTextProps;\n  textStyle?: Animated.AnimateStyle<StyleProp<TextStyle>>;\n};\n\nexport type CandlestickChartCrosshairTooltipContext = {\n  position: Animated.SharedValue<'left' | 'right'>;\n};\n\nexport const CandlestickChartCrosshairTooltipContext =\n  React.createContext<CandlestickChartCrosshairTooltipContext>({\n    position: { value: 'left' },\n  });\n\nexport function CandlestickChartCrosshairTooltip({\n  children,\n  xGutter = 8,\n  yGutter = 8,\n  tooltipTextProps,\n  textStyle,\n  ...props\n}: CandlestickChartCrosshairTooltipProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { currentY } = useCandlestickChart();\n  const { position } = React.useContext(\n    CandlestickChartCrosshairTooltipContext\n  );\n\n  const elementHeight = useSharedValue(0);\n  const elementWidth = useSharedValue(0);\n\n  const handleLayout = React.useCallback(\n    (event) => {\n      elementHeight.value = event.nativeEvent.layout.height;\n      elementWidth.value = event.nativeEvent.layout.width;\n    },\n    [elementHeight, elementWidth]\n  );\n\n  const topOffset = useDerivedValue(() => {\n    let offset = 0;\n    if (currentY.value < elementHeight.value / 2 + yGutter) {\n      offset = currentY.value - (elementHeight.value / 2 + yGutter);\n    } else if (currentY.value + elementHeight.value / 2 > height - yGutter) {\n      offset = currentY.value + elementHeight.value / 2 - height + yGutter;\n    }\n\n    return offset;\n  });\n\n  const tooltip = useAnimatedStyle(() => ({\n    backgroundColor: 'white',\n    position: 'absolute',\n    display: 'flex',\n    padding: 4,\n  }));\n  const leftTooltip = useAnimatedStyle(() => ({\n    left: xGutter,\n    top: -(elementHeight.value / 2) - topOffset.value,\n    opacity: position.value === 'left' ? 1 : 0,\n  }));\n  const rightTooltip = useAnimatedStyle(() => ({\n    left: width - elementWidth.value - xGutter,\n    top: -(elementHeight.value / 2) - topOffset.value,\n    opacity: position.value === 'right' ? 1 : 0,\n  }));\n\n  return (\n    <>\n      <Animated.View\n        onLayout={handleLayout}\n        {...props}\n        style={[tooltip, leftTooltip, props.style]}\n      >\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n      <Animated.View {...props} style={[tooltip, rightTooltip, props.style]}>\n        {children || (\n          <CandlestickChartPriceText\n            {...tooltipTextProps}\n            style={[styles.text, tooltipTextProps?.style, textStyle]}\n          />\n        )}\n      </Animated.View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 14,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}