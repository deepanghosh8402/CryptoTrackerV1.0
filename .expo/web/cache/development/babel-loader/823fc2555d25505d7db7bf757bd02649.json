{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport CoinDetailsHeader from \"./Components/CoinDetailsHeader\";\nimport Coin from \"../../../../../assets/data/crypto.json\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./style\";\nimport { color } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { LineChart, CandlestickChart } from \"react-native-wagmi-charts\";\nimport { gestureHandlerRootHOC } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CoinDetailedScreen = function CoinDetailedScreen() {\n  var small = Coin.image.small,\n      name = Coin.name,\n      symbol = Coin.symbol,\n      prices = Coin.prices,\n      _Coin$market_data = Coin.market_data,\n      market_cap_rank = _Coin$market_data.market_cap_rank,\n      current_price = _Coin$market_data.current_price,\n      price_change_24h = _Coin$market_data.price_change_24h;\n  var percentageColor = price_change_24h < 0 ? \"#ea3943\" : \"#16c784\";\n  var data2 = [{\n    timestamp: 1638399794129,\n    value: 57124.866357580555\n  }, {\n    timestamp: 1638403476369,\n    value: 57169.37199381056\n  }, {\n    timestamp: 1638407244512,\n    value: 56916.55089897206\n  }, {\n    timestamp: 1638410441521,\n    value: 57214.082150451875\n  }, {\n    timestamp: 1638414229015,\n    value: 57004.22208925368\n  }, {\n    timestamp: 1638417714496,\n    value: 56367.42957147236\n  }, {\n    timestamp: 1638421425604,\n    value: 56522.443308392365\n  }, {\n    timestamp: 1638425027112,\n    value: 56922.76114582327\n  }, {\n    timestamp: 1638428418970,\n    value: 56571.45952071818\n  }, {\n    timestamp: 1638432235967,\n    value: 56888.684247225356\n  }, {\n    timestamp: 1638435954706,\n    value: 57067.47418828491\n  }, {\n    timestamp: 1638439343039,\n    value: 56709.0773641982\n  }, {\n    timestamp: 1638442935772,\n    value: 56557.24685535338\n  }, {\n    timestamp: 1638446477740,\n    value: 56432.72283091287\n  }, {\n    timestamp: 1638450024595,\n    value: 56503.19396231729\n  }, {\n    timestamp: 1638453873126,\n    value: 56313.93243198974\n  }, {\n    timestamp: 1638457350240,\n    value: 57224.482540373145\n  }, {\n    timestamp: 1638461347302,\n    value: 56547.475100623175\n  }, {\n    timestamp: 1638464498024,\n    value: 56225.08060672014\n  }, {\n    timestamp: 1638468329477,\n    value: 56596.33014616169\n  }, {\n    timestamp: 1638472198746,\n    value: 56855.254695044176\n  }, {\n    timestamp: 1638475482827,\n    value: 56672.25690242264\n  }, {\n    timestamp: 1638478867637,\n    value: 57061.173369713586\n  }, {\n    timestamp: 1638482546642,\n    value: 56923.10861267683\n  }, {\n    timestamp: 1638484132000,\n    value: 56757.67029705151\n  }];\n  var points = prices.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        timestamp = _ref2[0],\n        value = _ref2[1];\n\n    return {\n      timestamp: timestamp,\n      value: value\n    };\n  });\n  var chartColor = current_price.usd > prices[0][1] ? \"#16c784\" : \"#ea3943\";\n  var screenWidth = Dimensions.get(\"window\").width;\n  var Chart = gestureHandlerRootHOC(function () {\n    return _jsxs(LineChart, {\n      height: screenWidth / 2,\n      width: screenWidth,\n      children: [_jsx(LineChart.Path, {\n        color: chartColor\n      }), _jsx(LineChart.CursorCrosshair, {\n        color: chartColor\n      })]\n    });\n  });\n  var onCurrentIndexChange = (function (number) {\n    console.log(number);\n  }, []);\n  return _jsx(View, {\n    style: {\n      paddingHorizontal: 10\n    },\n    children: _jsxs(LineChart.Provider, {\n      data: points,\n      children: [_jsx(CoinDetailsHeader, {\n        image: small,\n        name: name,\n        marketCapRank: market_cap_rank,\n        symbol: symbol\n      }), _jsxs(View, {\n        style: styles.priceContainer,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.name,\n            children: name\n          }), _jsxs(Text, {\n            style: styles.currentPrice,\n            children: [\"$\", current_price.usd]\n          })]\n        }), _jsxs(View, {\n          style: {\n            backgroundColor: percentageColor,\n            paddingHorizontal: 5,\n            paddingVertical: 8,\n            borderRadius: 5,\n            flexDirection: \"row\",\n            height: 40\n          },\n          children: [_jsx(AntDesign, {\n            name: price_change_24h < 0 ? \"caretdown\" : \"caretup\",\n            size: 12,\n            color: \"white\",\n            style: {\n              alignSelf: \"center\",\n              marginRight: 5\n            }\n          }), _jsxs(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 15,\n              fontWeight: \"400\"\n            },\n            children: [price_change_24h.toFixed(2), \"%\"]\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsx(Chart, {})\n      })]\n    })\n  });\n};\n\nexport default CoinDetailedScreen;","map":{"version":3,"sources":["D:/Personal/00 Dossair/CryptoTrackerFinal/src/components/Coiniteam/screens/CoinDetailedScreen/index.jsx"],"names":["React","CoinDetailsHeader","Coin","styles","color","AntDesign","LineChart","CandlestickChart","gestureHandlerRootHOC","CoinDetailedScreen","small","image","name","symbol","prices","market_data","market_cap_rank","current_price","price_change_24h","percentageColor","data2","timestamp","value","points","map","chartColor","usd","screenWidth","Dimensions","get","width","Chart","onCurrentIndexChange","number","console","log","paddingHorizontal","priceContainer","currentPrice","backgroundColor","paddingVertical","borderRadius","flexDirection","height","alignSelf","marginRight","fontSize","fontWeight","toFixed"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CoinDetailsHeader from \"./Components/CoinDetailsHeader\";\r\nimport Coin from \"../../../../../assets/data/crypto.json\";\r\nimport { View, Image, Text } from \"react-native\";\r\nimport styles from \"./style\";\r\nimport { color } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { LineChart, CandlestickChart } from \"react-native-wagmi-charts\";\r\nimport { gestureHandlerRootHOC } from \"react-native-gesture-handler\";\r\n// import * as haptics from \"expo-haptics\";\r\nconst CoinDetailedScreen = () => {\r\n  const {\r\n    image: { small },\r\n    name,\r\n    symbol,\r\n    prices,\r\n    market_data: { market_cap_rank, current_price, price_change_24h },\r\n  } = Coin;\r\n  const percentageColor = price_change_24h < 0 ? \"#ea3943\" : \"#16c784\";\r\n  const data2 = [\r\n    {\r\n      timestamp: 1638399794129,\r\n      value: 57124.866357580555,\r\n    },\r\n    {\r\n      timestamp: 1638403476369,\r\n      value: 57169.37199381056,\r\n    },\r\n    {\r\n      timestamp: 1638407244512,\r\n      value: 56916.55089897206,\r\n    },\r\n    {\r\n      timestamp: 1638410441521,\r\n      value: 57214.082150451875,\r\n    },\r\n    {\r\n      timestamp: 1638414229015,\r\n      value: 57004.22208925368,\r\n    },\r\n    {\r\n      timestamp: 1638417714496,\r\n      value: 56367.42957147236,\r\n    },\r\n    {\r\n      timestamp: 1638421425604,\r\n      value: 56522.443308392365,\r\n    },\r\n    {\r\n      timestamp: 1638425027112,\r\n      value: 56922.76114582327,\r\n    },\r\n    {\r\n      timestamp: 1638428418970,\r\n      value: 56571.45952071818,\r\n    },\r\n    {\r\n      timestamp: 1638432235967,\r\n      value: 56888.684247225356,\r\n    },\r\n    {\r\n      timestamp: 1638435954706,\r\n      value: 57067.47418828491,\r\n    },\r\n    {\r\n      timestamp: 1638439343039,\r\n      value: 56709.0773641982,\r\n    },\r\n    {\r\n      timestamp: 1638442935772,\r\n      value: 56557.24685535338,\r\n    },\r\n    {\r\n      timestamp: 1638446477740,\r\n      value: 56432.72283091287,\r\n    },\r\n    {\r\n      timestamp: 1638450024595,\r\n      value: 56503.19396231729,\r\n    },\r\n    {\r\n      timestamp: 1638453873126,\r\n      value: 56313.93243198974,\r\n    },\r\n    {\r\n      timestamp: 1638457350240,\r\n      value: 57224.482540373145,\r\n    },\r\n    {\r\n      timestamp: 1638461347302,\r\n      value: 56547.475100623175,\r\n    },\r\n    {\r\n      timestamp: 1638464498024,\r\n      value: 56225.08060672014,\r\n    },\r\n    {\r\n      timestamp: 1638468329477,\r\n      value: 56596.33014616169,\r\n    },\r\n    {\r\n      timestamp: 1638472198746,\r\n      value: 56855.254695044176,\r\n    },\r\n    {\r\n      timestamp: 1638475482827,\r\n      value: 56672.25690242264,\r\n    },\r\n    {\r\n      timestamp: 1638478867637,\r\n      value: 57061.173369713586,\r\n    },\r\n    {\r\n      timestamp: 1638482546642,\r\n      value: 56923.10861267683,\r\n    },\r\n    {\r\n      timestamp: 1638484132000,\r\n      value: 56757.67029705151,\r\n    },\r\n  ];\r\n  // console.log({\r\n  //   points1: prices.map((price) => ({ x: price[0], y: price[1] })),\r\n  // });\r\n  const points = prices.map(([timestamp, value]) => ({\r\n    timestamp,\r\n    value,\r\n  }));\r\n  const chartColor = current_price.usd > prices[0][1] ? \"#16c784\" : \"#ea3943\";\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  // console.log(data);\r\n  // console.log(points);\r\n  const Chart = gestureHandlerRootHOC(() => (\r\n    <LineChart height={screenWidth / 2} width={screenWidth}>\r\n      <LineChart.Path color={chartColor} />\r\n      <LineChart.CursorCrosshair color={chartColor} />\r\n    </LineChart>\r\n    // <View>\r\n    //   <LineChart.Provider data={points}>\r\n    // <LineChart>\r\n    //   <LineChart.Path color=\"hotpink\">\r\n    //     <LineChart.Gradient />\r\n    //     <LineChart.Highlight color=\"#FFFFFF\" from={10} to={15} />\r\n    //     <LineChart.HorizontalLine at={{ value: 56923.84 }} />\r\n    //     <LineChart.Dot color=\"red\" at={10} hasPulse />\r\n    //   </LineChart.Path>\r\n    //   <LineChart.CursorCrosshair color=\"#FFFFFF\">\r\n    //     <LineChart.Tooltip />\r\n    //   </LineChart.CursorCrosshair>\r\n    // </LineChart>\r\n    //   </LineChart.Provider>\r\n    // </View>\r\n  ));\r\n  const onCurrentIndexChange =\r\n    ((number) => {\r\n      console.log(number);\r\n    },\r\n    []);\r\n  return (\r\n    <View style={{ paddingHorizontal: 10 }}>\r\n      <LineChart.Provider data={points}>\r\n        <CoinDetailsHeader\r\n          image={small}\r\n          name={name}\r\n          marketCapRank={market_cap_rank}\r\n          symbol={symbol}\r\n        />\r\n        <View style={styles.priceContainer}>\r\n          <View>\r\n            <Text style={styles.name}>{name}</Text>\r\n            <Text style={styles.currentPrice}>${current_price.usd}</Text>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              backgroundColor: percentageColor,\r\n              paddingHorizontal: 5,\r\n              paddingVertical: 8,\r\n              borderRadius: 5,\r\n              flexDirection: \"row\",\r\n              height: 40,\r\n            }}\r\n          >\r\n            <AntDesign\r\n              name={price_change_24h < 0 ? \"caretdown\" : \"caretup\"}\r\n              size={12}\r\n              color={\"white\"}\r\n              style={{ alignSelf: \"center\", marginRight: 5 }}\r\n            />\r\n\r\n            <Text style={{ color: \"white\", fontSize: 15, fontWeight: \"400\" }}>\r\n              {price_change_24h.toFixed(2)}%\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <Chart />\r\n        </View>\r\n      </LineChart.Provider>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CoinDetailedScreen;\r\n"]},"metadata":{},"sourceType":"module"}