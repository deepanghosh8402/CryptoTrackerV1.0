{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jake/git/react-native-candlestick-chart/example/src/CandlestickChart.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Box, Button, Flex, Heading, Text, Stack } from 'bumbag-native';\nimport { CandlestickChart } from \"/Users/jake/git/react-native-candlestick-chart/src/index\";\nimport * as haptics from 'expo-haptics';\nimport mockData from \"./data/candlestick-data.json\";\nimport mockData2 from \"./data/candlestick-data2.json\";\n\nfunction invokeHaptic() {\n  if (['ios', 'android'].includes(Platform.OS)) {\n    haptics.impactAsync(haptics.ImpactFeedbackStyle.Light);\n  }\n}\n\nexport default function App() {\n  var _React$useState = React.useState(mockData),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Heading.H5, {\n    paddingX: \"major-2\",\n    marginBottom: \"major-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Candlestick Chart \\uD83D\\uDD6F\"), React.createElement(CandlestickChart.Provider, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(CandlestickChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(CandlestickChart.Candles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), React.createElement(CandlestickChart.Crosshair, {\n    onCurrentXChange: invokeHaptic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(CandlestickChart.Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }))), React.createElement(Heading.H6, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Load Data\"), React.createElement(Box, {\n    marginTop: \"major-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Flex, {\n    flexWrap: 'wrap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return setData(mockData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"candlestick-data\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return setData(mockData2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"candlestick-data2\"))), React.createElement(Stack, {\n    padding: \"major-2\",\n    spacing: \"major-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Heading.H6, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"PriceText\"), React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Formatted: \"), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Current\"), React.createElement(CandlestickChart.PriceText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Open\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"High\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"high\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Low\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Close\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })))), React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Value: \"), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Current\"), React.createElement(CandlestickChart.PriceText, {\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Open\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"open\",\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"High\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"high\",\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Low\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"low\",\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Close\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"close\",\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })))), React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Custom format: \"), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Current\"), React.createElement(CandlestickChart.PriceText, {\n    format: function () {\n      var _f = function _f(d) {\n        return \"$\" + d.formatted + \" AUD\";\n      };\n\n      _f._closure = {};\n      _f.asString = \"function _f(d){return\\\"$\\\"+d.formatted+\\\" AUD\\\";}\";\n      _f.__workletHash = 9464691280870;\n      _f.__location = \"/Users/jake/git/react-native-candlestick-chart/example/src/CandlestickChart.tsx (98:26)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Open\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"open\",\n    format: function () {\n      var _f = function _f(d) {\n        return \"$\" + d.formatted + \" AUD\";\n      };\n\n      _f._closure = {};\n      _f.asString = \"function _f(d){return\\\"$\\\"+d.formatted+\\\" AUD\\\";}\";\n      _f.__workletHash = 9464691280870;\n      _f.__location = \"/Users/jake/git/react-native-candlestick-chart/example/src/CandlestickChart.tsx (108:26)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), React.createElement(Box, {\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    fontSize: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Close\"), React.createElement(CandlestickChart.PriceText, {\n    type: \"close\",\n    format: function () {\n      var _f = function _f(d) {\n        return \"$\" + d.formatted + \" AUD\";\n      };\n\n      _f._closure = {};\n      _f.asString = \"function _f(d){return\\\"$\\\"+d.formatted+\\\" AUD\\\";}\";\n      _f.__workletHash = 9464691280870;\n      _f.__location = \"/Users/jake/git/react-native-candlestick-chart/example/src/CandlestickChart.tsx (118:26)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }))))), React.createElement(Stack, {\n    padding: \"major-2\",\n    spacing: \"minor-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(Heading.H6, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"DatetimeText\"), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Formatted: \"), React.createElement(CandlestickChart.DatetimeText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Float: \"), React.createElement(CandlestickChart.DatetimeText, {\n    variant: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Custom format: \"), React.createElement(CandlestickChart.DatetimeText, {\n    locale: \"en-AU\",\n    options: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/jake/git/react-native-candlestick-chart/example/src/CandlestickChart.tsx"],"names":["React","Box","Button","Flex","Heading","Text","Stack","CandlestickChart","haptics","mockData","mockData2","invokeHaptic","includes","Platform","OS","impactAsync","ImpactFeedbackStyle","Light","App","useState","data","setData","d","formatted","year","month","day","hour","minute","second"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Box, Button, Flex, Heading, Text, Stack } from 'bumbag-native';\nimport { CandlestickChart, TCandle } from 'react-native-wagmi-charts';\nimport * as haptics from 'expo-haptics';\n\nimport mockData from './data/candlestick-data.json';\nimport mockData2 from './data/candlestick-data2.json';\n\nfunction invokeHaptic() {\n  if (['ios', 'android'].includes(Platform.OS)) {\n    haptics.impactAsync(haptics.ImpactFeedbackStyle.Light);\n  }\n}\n\nexport default function App() {\n  const [data, setData] = React.useState<TCandle[]>(mockData);\n\n  return (\n    <>\n      <Heading.H5 paddingX=\"major-2\" marginBottom=\"major-2\">\n        Candlestick Chart 🕯\n      </Heading.H5>\n      <CandlestickChart.Provider data={data}>\n        <CandlestickChart>\n          <CandlestickChart.Candles />\n          <CandlestickChart.Crosshair onCurrentXChange={invokeHaptic}>\n            <CandlestickChart.Tooltip />\n          </CandlestickChart.Crosshair>\n        </CandlestickChart>\n        <Heading.H6>Load Data</Heading.H6>\n        <Box marginTop=\"major-2\">\n          <Flex flexWrap={'wrap'}>\n            <Button onPress={() => setData(mockData)}>candlestick-data</Button>\n            <Button onPress={() => setData(mockData2)}>\n              candlestick-data2\n            </Button>\n          </Flex>\n        </Box>\n        <Stack padding=\"major-2\" spacing=\"major-1\">\n          <Heading.H6>PriceText</Heading.H6>\n          <Box>\n            <Text fontWeight=\"500\">Formatted: </Text>\n            <Flex>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Current</Text>\n                <CandlestickChart.PriceText />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Open</Text>\n                <CandlestickChart.PriceText type=\"open\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">High</Text>\n                <CandlestickChart.PriceText type=\"high\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Low</Text>\n                <CandlestickChart.PriceText type=\"low\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Close</Text>\n                <CandlestickChart.PriceText type=\"close\" />\n              </Box>\n            </Flex>\n          </Box>\n          <Box>\n            <Text fontWeight=\"500\">Value: </Text>\n            <Flex>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Current</Text>\n                <CandlestickChart.PriceText variant=\"value\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Open</Text>\n                <CandlestickChart.PriceText type=\"open\" variant=\"value\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">High</Text>\n                <CandlestickChart.PriceText type=\"high\" variant=\"value\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Low</Text>\n                <CandlestickChart.PriceText type=\"low\" variant=\"value\" />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Close</Text>\n                <CandlestickChart.PriceText type=\"close\" variant=\"value\" />\n              </Box>\n            </Flex>\n          </Box>\n          <Box>\n            <Text fontWeight=\"500\">Custom format: </Text>\n            <Flex>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Current</Text>\n                <CandlestickChart.PriceText\n                  format={(d) => {\n                    'worklet';\n                    return `$${d.formatted} AUD`;\n                  }}\n                />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Open</Text>\n                <CandlestickChart.PriceText\n                  type=\"open\"\n                  format={(d) => {\n                    'worklet';\n                    return `$${d.formatted} AUD`;\n                  }}\n                />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"100\">Close</Text>\n                <CandlestickChart.PriceText\n                  type=\"close\"\n                  format={(d) => {\n                    'worklet';\n                    return `$${d.formatted} AUD`;\n                  }}\n                />\n              </Box>\n            </Flex>\n          </Box>\n        </Stack>\n        <Stack padding=\"major-2\" spacing=\"minor-1\">\n          <Heading.H6>DatetimeText</Heading.H6>\n          <Flex>\n            <Text fontWeight=\"500\">Formatted: </Text>\n            <CandlestickChart.DatetimeText />\n          </Flex>\n          <Flex>\n            <Text fontWeight=\"500\">Float: </Text>\n            <CandlestickChart.DatetimeText variant=\"value\" />\n          </Flex>\n          <Flex>\n            <Text fontWeight=\"500\">Custom format: </Text>\n            <CandlestickChart.DatetimeText\n              locale=\"en-AU\"\n              options={{\n                year: 'numeric',\n                month: 'numeric',\n                day: 'numeric',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n              }}\n            />\n          </Flex>\n        </Stack>\n      </CandlestickChart.Provider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}