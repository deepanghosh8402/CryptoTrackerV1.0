{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"onCurrentXChange\", \"children\", \"horizontalCrosshairProps\", \"verticalCrosshairProps\", \"lineProps\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LongPressGestureHandler } from 'react-native-gesture-handler';\nimport Animated, { useAnimatedGestureHandler, useSharedValue, useAnimatedStyle, useAnimatedReaction, runOnJS } from 'react-native-reanimated';\nimport { clamp } from 'react-native-redash';\nimport { CandlestickChartDimensionsContext } from \"./Chart\";\nimport { CandlestickChartLine } from \"./Line\";\nimport { useCandlestickChart } from \"./useCandlestickChart\";\nimport { CandlestickChartCrosshairTooltipContext } from \"./CrosshairTooltip\";\nexport function CandlestickChartCrosshair(_ref) {\n  var color = _ref.color,\n      onCurrentXChange = _ref.onCurrentXChange,\n      children = _ref.children,\n      _ref$horizontalCrossh = _ref.horizontalCrosshairProps,\n      horizontalCrosshairProps = _ref$horizontalCrossh === void 0 ? {} : _ref$horizontalCrossh,\n      _ref$verticalCrosshai = _ref.verticalCrosshairProps,\n      verticalCrosshairProps = _ref$verticalCrosshai === void 0 ? {} : _ref$verticalCrosshai,\n      _ref$lineProps = _ref.lineProps,\n      lineProps = _ref$lineProps === void 0 ? {} : _ref$lineProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(CandlestickChartDimensionsContext),\n      width = _React$useContext.width,\n      height = _React$useContext.height;\n\n  var _useCandlestickChart = useCandlestickChart(),\n      currentX = _useCandlestickChart.currentX,\n      currentY = _useCandlestickChart.currentY,\n      step = _useCandlestickChart.step;\n\n  var tooltipPosition = useSharedValue('left');\n  var opacity = useSharedValue(0);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onActive: function () {\n      var _f = function _f(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y;\n        var boundedX = x <= width - 1 ? x : width - 1;\n\n        if (boundedX < 100) {\n          tooltipPosition.value = 'right';\n        } else {\n          tooltipPosition.value = 'left';\n        }\n\n        opacity.value = 1;\n        currentY.value = clamp(y, 0, height);\n        currentX.value = boundedX - boundedX % step + step / 2;\n      };\n\n      _f._closure = {\n        width: width,\n        tooltipPosition: tooltipPosition,\n        opacity: opacity,\n        currentY: currentY,\n        clamp: clamp,\n        height: height,\n        currentX: currentX,\n        step: step\n      };\n      _f.asString = \"function _f({x:x,y:y}){const{width,tooltipPosition,opacity,currentY,clamp,height,currentX,step}=jsThis._closure;{const boundedX=x<=width-1?x:width-1;if(boundedX<100){tooltipPosition.value='right';}else{tooltipPosition.value='left';}opacity.value=1;currentY.value=clamp(y,0,height);currentX.value=boundedX-boundedX%step+step/2;}}\";\n      _f.__workletHash = 17138610035645;\n      _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (33:14)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f() {\n        opacity.value = 0;\n        currentY.value = -1;\n        currentX.value = -1;\n      };\n\n      _f._closure = {\n        opacity: opacity,\n        currentY: currentY,\n        currentX: currentX\n      };\n      _f.asString = \"function _f(){const{opacity,currentY,currentX}=jsThis._closure;{opacity.value=0;currentY.value=-1;currentX.value=-1;}}\";\n      _f.__workletHash = 14762242724916;\n      _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (49:11)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }()\n  });\n  var horizontal = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: opacity.value,\n        transform: [{\n          translateY: currentY.value\n        }]\n      };\n    };\n\n    _f._closure = {\n      opacity: opacity,\n      currentY: currentY\n    };\n    _f.asString = \"function _f(){const{opacity,currentY}=jsThis._closure;{return{opacity:opacity.value,transform:[{translateY:currentY.value}]};}}\";\n    _f.__workletHash = 8292860466368;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (55:38)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var vertical = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: opacity.value,\n        transform: [{\n          translateX: currentX.value\n        }]\n      };\n    };\n\n    _f._closure = {\n      opacity: opacity,\n      currentX: currentX\n    };\n    _f.asString = \"function _f(){const{opacity,currentX}=jsThis._closure;{return{opacity:opacity.value,transform:[{translateX:currentX.value}]};}}\";\n    _f.__workletHash = 12324503953281;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (61:36)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  useAnimatedReaction(function () {\n    var _f = function _f() {\n      return currentX.value;\n    };\n\n    _f._closure = {\n      currentX: currentX\n    };\n    _f.asString = \"function _f(){const{currentX}=jsThis._closure;{return currentX.value;}}\";\n    _f.__workletHash = 12688706314195;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (67:22)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f(data, prevData) {\n      if (data !== -1 && data !== prevData && onCurrentXChange) {\n        runOnJS(onCurrentXChange)(data);\n      }\n    };\n\n    _f._closure = {\n      onCurrentXChange: onCurrentXChange,\n      runOnJS: runOnJS\n    };\n    _f.asString = \"function _f(data,prevData){const{onCurrentXChange,runOnJS}=jsThis._closure;{if(data!==-1&&data!==prevData&&onCurrentXChange){runOnJS(onCurrentXChange)(data);}}}\";\n    _f.__workletHash = 12757724371806;\n    _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\Crosshair.js (67:44)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(LongPressGestureHandler, _extends({\n    minDurationMs: 0,\n    maxDist: 999999,\n    onGestureEvent: onGestureEvent\n  }, props), React.createElement(Animated.View, {\n    style: StyleSheet.absoluteFill\n  }, React.createElement(Animated.View, _extends({\n    style: [StyleSheet.absoluteFill, horizontal]\n  }, horizontalCrosshairProps), React.createElement(CandlestickChartLine, _extends({\n    color: color,\n    x: width,\n    y: 0\n  }, lineProps)), React.createElement(CandlestickChartCrosshairTooltipContext.Provider, {\n    value: {\n      position: tooltipPosition\n    }\n  }, children)), React.createElement(Animated.View, _extends({\n    style: [StyleSheet.absoluteFill, vertical]\n  }, verticalCrosshairProps), React.createElement(CandlestickChartLine, _extends({\n    color: color,\n    x: 0,\n    y: height\n  }, lineProps)))));\n}","map":{"version":3,"sources":["Crosshair.tsx"],"names":["LongPressGestureHandler","useAnimatedGestureHandler","horizontalCrosshairProps","verticalCrosshairProps","lineProps","props","height","React","step","useCandlestickChart","tooltipPosition","useSharedValue","opacity","onGestureEvent","onActive","y","boundedX","x","width","currentY","clamp","currentX","onEnd","horizontal","useAnimatedStyle","transform","translateY","value","vertical","translateX","useAnimatedReaction","data","runOnJS","StyleSheet","absoluteFill","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport {\n  GestureEvent,\n  LongPressGestureHandler,\n  LongPressGestureHandlerEventPayload,\n  LongPressGestureHandlerProps,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useSharedValue,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  runOnJS,\n} from 'react-native-reanimated';\nimport { clamp } from 'react-native-redash';\n\nimport { CandlestickChartDimensionsContext } from './Chart';\nimport { CandlestickChartLine, CandlestickChartLineProps } from './Line';\nimport { useCandlestickChart } from './useCandlestickChart';\nimport { CandlestickChartCrosshairTooltipContext } from './CrosshairTooltip';\n\ntype CandlestickChartCrosshairProps = LongPressGestureHandlerProps & {\n  color?: string;\n  children?: React.ReactNode;\n  onCurrentXChange?: (value: number) => unknown;\n  horizontalCrosshairProps?: Animated.AnimateProps<ViewProps>;\n  verticalCrosshairProps?: Animated.AnimateProps<ViewProps>;\n  lineProps?: Partial<CandlestickChartLineProps>;\n};\n\nexport function CandlestickChartCrosshair({\n  color,\n  onCurrentXChange,\n  children,\n  horizontalCrosshairProps = {},\n  verticalCrosshairProps = {},\n  lineProps = {},\n  ...props\n}: CandlestickChartCrosshairProps) {\n  const { width, height } = React.useContext(CandlestickChartDimensionsContext);\n  const { currentX, currentY, step } = useCandlestickChart();\n\n  const tooltipPosition = useSharedValue<'left' | 'right'>('left');\n\n  const opacity = useSharedValue(0);\n  const onGestureEvent = useAnimatedGestureHandler<\n    GestureEvent<LongPressGestureHandlerEventPayload>\n  >({\n    onActive: ({ x, y }) => {\n      const boundedX = x <= width - 1 ? x : width - 1;\n      if (boundedX < 100) {\n        tooltipPosition.value = 'right';\n      } else {\n        tooltipPosition.value = 'left';\n      }\n      opacity.value = 1;\n      currentY.value = clamp(y, 0, height);\n      currentX.value = boundedX - (boundedX % step) + step / 2;\n    },\n    onEnd: () => {\n      opacity.value = 0;\n      currentY.value = -1;\n      currentX.value = -1;\n    },\n  });\n  const horizontal = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n    transform: [{ translateY: currentY.value }],\n  }));\n  const vertical = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n    transform: [{ translateX: currentX.value }],\n  }));\n\n  useAnimatedReaction(\n    () => currentX.value,\n    (data, prevData) => {\n      if (data !== -1 && data !== prevData && onCurrentXChange) {\n        runOnJS(onCurrentXChange)(data);\n      }\n    }\n  );\n\n  return (\n    <LongPressGestureHandler\n      minDurationMs={0}\n      maxDist={999999}\n      onGestureEvent={onGestureEvent}\n      {...props}\n    >\n      <Animated.View style={StyleSheet.absoluteFill}>\n        <Animated.View\n          style={[StyleSheet.absoluteFill, horizontal]}\n          {...horizontalCrosshairProps}\n        >\n          <CandlestickChartLine color={color} x={width} y={0} {...lineProps} />\n          <CandlestickChartCrosshairTooltipContext.Provider\n            value={{ position: tooltipPosition }}\n          >\n            {children}\n          </CandlestickChartCrosshairTooltipContext.Provider>\n        </Animated.View>\n        <Animated.View\n          style={[StyleSheet.absoluteFill, vertical]}\n          {...verticalCrosshairProps}\n        >\n          <CandlestickChartLine color={color} x={0} y={height} {...lineProps} />\n        </Animated.View>\n      </Animated.View>\n    </LongPressGestureHandler>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}