{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\nimport { Children, cloneElement } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport flattenChildren from 'react-keyed-flatten-children';\nimport { LineChart } from \"./Chart\";\nexport function LineChartGroup(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var flatChildren = flattenChildren(children);\n  var flatChildrenCount = Children.count(flatChildren);\n  return React.createElement(View, props, Children.map(flatChildren, function (child, index) {\n    var isLast = index === flatChildrenCount - 1;\n\n    if (!isLast && child.type === LineChart) {\n      return cloneElement(child, {\n        absolute: true\n      });\n    }\n\n    return child;\n  }));\n}","map":{"version":3,"sources":["Group.tsx"],"names":["props","flatChildren","flattenChildren","flatChildrenCount","Children","isLast","index","child","cloneElement","absolute"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,OAAA;;AAEA,OAAA,eAAA,MAAA,8BAAA;AAEA,SAAA,SAAA;AAMA,OAAO,SAAA,cAAA,OAAuD;AAAA,MAA/B,QAA+B,QAA/B,QAA+B;AAAA,MAAhBA,KAAgB;;AAC5D,MAAMC,YAAY,GAAGC,eAAe,CAApC,QAAoC,CAApC;AACA,MAAMC,iBAAiB,GAAGC,QAAQ,CAARA,KAAAA,CAA1B,YAA0BA,CAA1B;AACA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAEG,QAAQ,CAAR,GAAA,CAAA,YAAA,EAA2B,UAAA,KAAA,EAAA,KAAA,EAAuB;AACjD,QAAMC,MAAM,GAAGC,KAAK,KAAKH,iBAAiB,GAA1C,CAAA;;AACA,QAAI,CAAA,MAAA,IAAWI,KAAK,CAALA,IAAAA,KAAf,SAAA,EAAyC;AACvC,aAAOC,YAAY,CAAA,KAAA,EAAQ;AACzBC,QAAAA,QAAQ,EAAE;AADe,OAAR,CAAnB;AAGD;;AACD,WAAA,KAAA;AAVN,GAGK,CAFH,CADF;AAcD","sourcesContent":["import React from 'react';\nimport { ReactNode, Children, cloneElement } from 'react';\nimport { ViewProps, View } from 'react-native';\nimport flattenChildren from 'react-keyed-flatten-children';\n\nimport { LineChart } from './Chart';\n\ntype Props = {\n  children: ReactNode;\n} & ViewProps;\n\nexport function LineChartGroup({ children, ...props }: Props) {\n  const flatChildren = flattenChildren(children);\n  const flatChildrenCount = Children.count(flatChildren);\n  return (\n    <View {...props}>\n      {/* eslint-disable-next-line @typescript-eslint/no-explicit-any */}\n      {Children.map(flatChildren, (child: any, index) => {\n        const isLast = index === flatChildrenCount - 1;\n        if (!isLast && child.type === LineChart) {\n          return cloneElement(child, {\n            absolute: true,\n          });\n        }\n        return child;\n      })}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}