{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as shape from 'd3-shape';\nimport { scaleLinear } from 'd3-scale';\nexport function getPath(_ref) {\n  var data = _ref.data,\n      from = _ref.from,\n      to = _ref.to,\n      width = _ref.width,\n      height = _ref.height,\n      gutter = _ref.gutter,\n      _shape = _ref.shape,\n      yDomain = _ref.yDomain;\n  var timestamps = data.map(function (_, i) {\n    return i;\n  });\n  var scaleX = scaleLinear().domain([Math.min.apply(Math, _toConsumableArray(timestamps)), Math.max.apply(Math, _toConsumableArray(timestamps))]).range([0, width]);\n  var scaleY = scaleLinear().domain([yDomain.min, yDomain.max]).range([height - gutter, gutter]);\n  var path = shape.line().defined(function (d) {\n    return from || to ? data.slice(from, to ? to + 1 : undefined).find(function (item) {\n      return item.timestamp === d.timestamp;\n    }) : true;\n  }).x(function (_, i) {\n    return scaleX(i);\n  }).y(function (d) {\n    return scaleY(d.value);\n  }).curve(_shape)(data);\n  return path;\n}","map":{"version":3,"sources":["getPath.ts"],"names":["shape","yDomain","timestamps","data","scaleX","scaleLinear","Math","scaleY","height","path","d","from","to","item"],"mappings":";AACA,OAAO,KAAP,KAAA,MAAA,UAAA;AAEA,SAAA,WAAA,QAAA,UAAA;AAIA,OAAO,SAAA,OAAA,OAkBI;AAAA,MAlBa,IAkBb,QAlBa,IAkBb;AAAA,MAlBa,IAkBb,QAlBa,IAkBb;AAAA,MAlBa,EAkBb,QAlBa,EAkBb;AAAA,MAlBa,KAkBb,QAlBa,KAkBb;AAAA,MAlBa,MAkBb,QAlBa,MAkBb;AAAA,MAlBa,MAkBb,QAlBa,MAkBb;AAAA,MAlBa,MAkBb,QAXTA,KAWS;AAAA,MAVTC,OAUS,QAVTA,OAUS;AACT,MAAMC,UAAU,GAAGC,IAAI,CAAJA,GAAAA,CAAS,UAAA,CAAA,EAAA,CAAA;AAAA,WAA5B,CAA4B;AAAA,GAATA,CAAnB;AAEA,MAAMC,MAAM,GAAGC,WAAW,GAAXA,MAAAA,CACL,CAACC,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAL,UAAK,EAAL,EAA0BA,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBADzBD,UACyB,EAA9B,CADKA,EAAAA,KAAAA,CAEN,CAAA,CAAA,EAFT,KAES,CAFMA,CAAf;AAGA,MAAME,MAAM,GAAGF,WAAW,GAAXA,MAAAA,CACL,CAACJ,OAAO,CAAR,GAAA,EAAcA,OAAO,CADhBI,GACL,CADKA,EAAAA,KAAAA,CAEN,CAACG,MAAM,GAAP,MAAA,EAFT,MAES,CAFMH,CAAf;AAGA,MAAMI,IAAI,GAAGT,KAAK,CAALA,IAAAA,GAAAA,OAAAA,CAEDU,UAAAA,CAAD;AAAA,WACPC,IAAI,IAAJA,EAAAA,GACIR,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EACeS,EAAE,GAAGA,EAAE,GAAL,CAAA,GADjBT,SAAAA,EAAAA,IAAAA,CAESU,UAAAA,IAAD;AAAA,aAAUA,IAAI,CAAJA,SAAAA,KAAmBH,CAAC,CAH1CC,SAGY;AAAA,KAFRR,CADJQ,GAHSX,IAEF;AAAA,GAFEA,EAAAA,CAAAA,CASR,UAAA,CAAA,EAAA,CAAA;AAAA,WAA2BI,MAAM,CATzBJ,CASyB,CAAjC;AAAA,GATQA,EAAAA,CAAAA,CAUPU,UAAAA,CAAD;AAAA,WAA0BH,MAAM,CAACG,CAAC,CAV1BV,KAUwB,CAAhC;AAAA,GAVQA,EAAAA,KAAAA,CAAAA,MAAAA,EAAb,IAAaA,CAAb;AAYA,SAAA,IAAA;AACD","sourcesContent":["// @ts-ignore\nimport * as shape from 'd3-shape';\n// @ts-ignore\nimport { scaleLinear } from 'd3-scale';\n\nimport type { TLineChartData, YDomain } from '../types';\n\nexport function getPath({\n  data,\n  from,\n  to,\n  width,\n  height,\n  gutter,\n  shape: _shape,\n  yDomain,\n}: {\n  data: TLineChartData;\n  from?: number;\n  to?: number;\n  width: number;\n  height: number;\n  gutter: number;\n  shape?: unknown;\n  yDomain: YDomain;\n}): string {\n  const timestamps = data.map((_, i) => i);\n\n  const scaleX = scaleLinear()\n    .domain([Math.min(...timestamps), Math.max(...timestamps)])\n    .range([0, width]);\n  const scaleY = scaleLinear()\n    .domain([yDomain.min, yDomain.max])\n    .range([height - gutter, gutter]);\n  const path = shape\n    .line()\n    .defined((d: { timestamp: number }) =>\n      from || to\n        ? data\n            .slice(from, to ? to + 1 : undefined)\n            .find((item) => item.timestamp === d.timestamp)\n        : true\n    )\n    .x((_: unknown, i: number) => scaleX(i))\n    .y((d: { value: number }) => scaleY(d.value))\n    .curve(_shape)(data);\n  return path;\n}\n"]},"metadata":{},"sourceType":"module"}