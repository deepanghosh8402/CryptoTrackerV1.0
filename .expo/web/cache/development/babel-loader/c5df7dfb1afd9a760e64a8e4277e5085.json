{"ast":null,"code":"import * as React from 'react';\nimport { useLineChartPrice } from \"./usePrice\";\nimport { AnimatedText } from \"../../components/AnimatedText\";\nLineChartPriceText.displayName = 'LineChartPriceText';\nexport function LineChartPriceText(_ref) {\n  var format = _ref.format,\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === void 0 ? 2 : _ref$precision,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'formatted' : _ref$variant,\n      style = _ref.style;\n  var price = useLineChartPrice({\n    format: format,\n    precision: precision\n  });\n  return React.createElement(AnimatedText, {\n    text: price[variant],\n    style: style\n  });\n}","map":{"version":3,"sources":["PriceText.tsx"],"names":["LineChartPriceText","precision","variant","style","price","useLineChartPrice","format"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAIA,SAAA,iBAAA;AAEA,SAAA,YAAA;AASAA,kBAAkB,CAAlBA,WAAAA,GAAAA,oBAAAA;AAEA,OAAO,SAAA,kBAAA,OAKqB;AAAA,MALO,MAKP,QALO,MAKP;AAAA,4BAH1BC,SAG0B;AAAA,MAH1BA,SAG0B,+BALO,CAKP;AAAA,0BAF1BC,OAE0B;AAAA,MAF1BA,OAE0B,6BALO,WAKP;AAAA,MAD1BC,KAC0B,QAD1BA,KAC0B;AAC1B,MAAMC,KAAK,GAAGC,iBAAiB,CAAC;AAAEC,IAAAA,MAAF,EAAEA,MAAF;AAAUL,IAAAA,SAAAA,EAAAA;AAAV,GAAD,CAA/B;AACA,SAAO,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AAAc,IAAA,IAAI,EAAEG,KAAK,CAAzB,OAAyB,CAAzB;AAAoC,IAAA,KAAK,EAAED;AAA3C,GAAA,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport type { TextProps as RNTextProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\n\nimport { useLineChartPrice } from './usePrice';\nimport type { TFormatterFn } from '../candle/types';\nimport { AnimatedText } from '../../components/AnimatedText';\n\nexport type LineChartPriceTextProps = {\n  format?: TFormatterFn<string>;\n  precision?: number;\n  variant?: 'formatted' | 'value';\n  style?: Animated.AnimateProps<RNTextProps>['style'];\n};\n\nLineChartPriceText.displayName = 'LineChartPriceText';\n\nexport function LineChartPriceText({\n  format,\n  precision = 2,\n  variant = 'formatted',\n  style,\n}: LineChartPriceTextProps) {\n  const price = useLineChartPrice({ format, precision });\n  return <AnimatedText text={price[variant]} style={style} />;\n}\n"]},"metadata":{},"sourceType":"module"}