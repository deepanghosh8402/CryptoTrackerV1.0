{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nexport var getDomain = function () {\n  var _f = function _f(rows) {\n    var values = rows.map(function (_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return [Math.min.apply(Math, _toConsumableArray(values)), Math.max.apply(Math, _toConsumableArray(values))];\n  };\n\n  _f._closure = {};\n  _f.asString = \"function getDomain(rows){const values=rows.map(function({value:value}){return value;});return[Math.min(...values),Math.max(...values)];}\";\n  _f.__workletHash = 9040438815482;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\line\\\\utils\\\\getDomain.js (1:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["getDomain.ts"],"names":["values","value","Math"],"mappings":";AAEA,WAAO,SAAP;AAAA,uBAAO,IAAP,EAAqE;AAEnE,QAAMA,MAAM,GAAG,IAAI,CAAJ,GAAA,CAAS;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAxB,KAAwB;AAAA,KAAT,CAAf;AACA,WAAO,CAACC,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAL,MAAK,EAAL,EAAsBA,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAjC,MAAiC,EAA1B,CAAP;AACD,GAJD;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA","sourcesContent":["import type { TLineChartPoint } from '../types';\n\nexport function getDomain(rows: TLineChartPoint[]): [number, number] {\n  'worklet';\n  const values = rows.map(({ value }) => value);\n  return [Math.min(...values), Math.max(...values)];\n}\n"]},"metadata":{},"sourceType":"module"}