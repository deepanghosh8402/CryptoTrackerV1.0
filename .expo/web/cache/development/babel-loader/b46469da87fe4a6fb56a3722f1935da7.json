{"ast":null,"code":"export var formatPrice = function () {\n  var _f = function _f(_ref) {\n    var _value = _ref.value,\n        _ref$defaultPrice = _ref.defaultPrice,\n        _defaultPrice = _ref$defaultPrice === void 0 ? '' : _ref$defaultPrice,\n        precision = _ref.precision;\n\n    var _defaultPrice2, _defaultPrice2$replac;\n\n    var defaultPrice = _defaultPrice;\n\n    if (typeof defaultPrice === 'number') {\n      defaultPrice = defaultPrice.toString();\n    }\n\n    var value = _value || ((_defaultPrice2 = defaultPrice) === null || _defaultPrice2 === void 0 ? void 0 : (_defaultPrice2$replac = _defaultPrice2.replace) === null || _defaultPrice2$replac === void 0 ? void 0 : _defaultPrice2$replac.call(_defaultPrice2, ',', ''));\n\n    if (!value) {\n      return \"0.00\";\n    }\n\n    var decimals = precision !== null && precision !== void 0 ? precision : Number(value) < 1 ? Math.min(8, value.toString().slice(2).search(/[^0]/g) + 3) : 2;\n    var res = \"\" + Number(value).toFixed(decimals);\n    var vals = res.split('.');\n\n    if (vals.length > 0) {\n      res = vals[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n      if (vals.length === 2) {\n        return res + '.' + vals[1];\n      }\n    }\n\n    return res;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function formatPrice({value:_value,defaultPrice:_defaultPrice='',precision:precision}){var _defaultPrice2,_defaultPrice2$replac;let defaultPrice=_defaultPrice;if(typeof defaultPrice==='number'){defaultPrice=defaultPrice.toString();}let value=_value||((_defaultPrice2=defaultPrice)===null||_defaultPrice2===void 0?void 0:(_defaultPrice2$replac=_defaultPrice2.replace)===null||_defaultPrice2$replac===void 0?void 0:_defaultPrice2$replac.call(_defaultPrice2,',',''));if(!value){return\\\"0.00\\\";}let decimals=precision!==null&&precision!==void 0?precision:Number(value)<1?Math.min(8,value.toString().slice(2).search(/[^0]/g)+3):2;let res=\\\"\\\"+Number(value).toFixed(decimals);const vals=res.split('.');if(vals.length>0){res=vals[0].replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g,',');if(vals.length===2){return res+'.'+vals[1];}}return res;}\";\n  _f.__workletHash = 17337500906937;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\utils\\\\formatPrice.js (4:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["formatPrice.ts"],"names":["value","defaultPrice","_defaultPrice","precision","_value","decimals","Number","Math","res","vals"],"mappings":"AAGA,WAAO,WAAP;AAAA,6BAQG;AAAA,QARyB,MAQzB,QAPDA,KAOC;AAAA,iCANDC,YAMC;AAAA,QANaC,aAMb,kCARyB,EAQzB;AAAA,QALDC,SAKC,QALDA,SAKC;;AAAA,QAAA,cAAA,EAAA,qBAAA;;AAGD,QAAIF,YAAY,GAAhB,aAAA;;AACA,QAAI,OAAA,YAAA,KAAJ,QAAA,EAAsC;AACpCA,MAAAA,YAAY,GAAIA,YAAD,CAAfA,QAAgBA,EAAhBA;AACD;;AAED,QAAID,KAAK,GAAGI,MAAM,KAAA,CAAA,cAAA,GAAA,YAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAIH,cAAAA,CAAJ,OAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAIA,qBAAAA,CAAAA,IAAAA,CAAAA,cAAAA,EAAAA,GAAAA,EAAtB,EAAsBA,CAAJ,CAAlB;;AACA,QAAI,CAAJ,KAAA,EAAY;AACV;AACD;;AAED,QAAII,QAAQ,GACVF,SADU,KAAA,IACVA,IAAAA,SADU,KAAA,KAAA,CACVA,GADU,SACVA,GACCG,MAAM,CAANA,KAAM,CAANA,GAAAA,CAAAA,GACGC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYP,KAAK,CAALA,QAAAA,GAAAA,KAAAA,CAAAA,CAAAA,EAAAA,MAAAA,CAAAA,OAAAA,IADfM,CACGC,CADHD,GAFH,CAAA;AAMA,QAAIE,GAAG,QAAMF,MAAM,CAANA,KAAM,CAANA,CAAAA,OAAAA,CAAb,QAAaA,CAAb;AACA,QAAMG,IAAI,GAAGD,GAAG,CAAHA,KAAAA,CAAb,GAAaA,CAAb;;AACA,QAAIC,IAAI,CAAJA,MAAAA,GAAJ,CAAA,EAAqB;AACnBD,MAAAA,GAAG,GAAGC,IAAI,CAAJA,CAAI,CAAJA,CAAAA,OAAAA,CAAAA,uBAAAA,EAAND,GAAMC,CAAND;;AACA,UAAIC,IAAI,CAAJA,MAAAA,KAAJ,CAAA,EAAuB;AACrB,eAAOD,GAAG,GAAHA,GAAAA,GAAYC,IAAI,CAAvB,CAAuB,CAAvB;AACD;AACF;;AACD,WAAA,GAAA;AACD,GApCD;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA","sourcesContent":["/**\n * @worklet\n */\nexport function formatPrice({\n  value: _value,\n  defaultPrice: _defaultPrice = '',\n  precision,\n}: {\n  value: string;\n  defaultPrice?: string;\n  precision?: number;\n}) {\n  'worklet';\n\n  let defaultPrice = _defaultPrice;\n  if (typeof defaultPrice === 'number') {\n    defaultPrice = (defaultPrice as number).toString();\n  }\n\n  let value = _value || defaultPrice?.replace?.(',', '');\n  if (!value) {\n    return `0.00`;\n  }\n\n  let decimals =\n    precision ??\n    (Number(value) < 1\n      ? Math.min(8, value.toString().slice(2).search(/[^0]/g) + 3)\n      : 2);\n\n  let res = `${Number(value).toFixed(decimals)}`;\n  const vals = res.split('.');\n  if (vals.length > 0) {\n    res = vals[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    if (vals.length === 2) {\n      return res + '.' + vals[1];\n    }\n  }\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}