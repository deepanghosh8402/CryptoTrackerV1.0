{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { interpolate, Extrapolate } from 'react-native-reanimated';\nexport var getDomain = function () {\n  var _f = function _f(rows) {\n    var values = rows.map(function (_ref) {\n      var high = _ref.high,\n          low = _ref.low;\n      return [high, low];\n    }).flat();\n    var min = Math.min.apply(Math, _toConsumableArray(values));\n    var max = Math.max.apply(Math, _toConsumableArray(values));\n    return [min - (max - min) * 0.025, max + (max - min) * 0.025];\n  };\n\n  _f._closure = {};\n  _f.asString = \"function getDomain(rows){const values=rows.map(function({high:high,low:low}){return[high,low];}).flat();const min=Math.min(...values);const max=Math.max(...values);return[min-(max-min)*0.025,max+(max-min)*0.025];}\";\n  _f.__workletHash = 16414213323905;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\utils.js (2:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var getY = function () {\n  var _f = function _f(_ref2) {\n    var value = _ref2.value,\n        domain = _ref2.domain,\n        maxHeight = _ref2.maxHeight;\n    return interpolate(value, domain, [maxHeight, 0], Extrapolate.CLAMP);\n  };\n\n  _f._closure = {\n    interpolate: interpolate,\n    Extrapolate: {\n      CLAMP: Extrapolate.CLAMP\n    }\n  };\n  _f.asString = \"function getY({value:value,domain:domain,maxHeight:maxHeight}){const{interpolate,Extrapolate}=jsThis._closure;{return interpolate(value,domain,[maxHeight,0],Extrapolate.CLAMP);}}\";\n  _f.__workletHash = 5240934525754;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\utils.js (13:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var getHeight = function () {\n  var _f = function _f(_ref3) {\n    var value = _ref3.value,\n        domain = _ref3.domain,\n        maxHeight = _ref3.maxHeight;\n    return interpolate(value, [0, Math.max.apply(Math, _toConsumableArray(domain)) - Math.min.apply(Math, _toConsumableArray(domain))], [0, maxHeight], Extrapolate.CLAMP);\n  };\n\n  _f._closure = {\n    interpolate: interpolate,\n    Extrapolate: {\n      CLAMP: Extrapolate.CLAMP\n    }\n  };\n  _f.asString = \"function getHeight({value:value,domain:domain,maxHeight:maxHeight}){const{interpolate,Extrapolate}=jsThis._closure;{return interpolate(value,[0,Math.max(...domain)-Math.min(...domain)],[0,maxHeight],Extrapolate.CLAMP);}}\";\n  _f.__workletHash = 11264723568629;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\utils.js (22:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var getPrice = function () {\n  var _f = function _f(_ref4) {\n    var y = _ref4.y,\n        domain = _ref4.domain,\n        maxHeight = _ref4.maxHeight;\n    if (y === -1) return -1;\n    return interpolate(y, [0, maxHeight], domain.reverse(), Extrapolate.CLAMP);\n  };\n\n  _f._closure = {\n    interpolate: interpolate,\n    Extrapolate: {\n      CLAMP: Extrapolate.CLAMP\n    }\n  };\n  _f.asString = \"function getPrice({y:y,domain:domain,maxHeight:maxHeight}){const{interpolate,Extrapolate}=jsThis._closure;{if(y===-1)return-1;return interpolate(y,[0,maxHeight],domain.reverse(),Extrapolate.CLAMP);}}\";\n  _f.__workletHash = 16159195501416;\n  _f.__location = \"D:\\\\Personal\\\\00 Dossair\\\\CryptoTrackerFinal\\\\node_modules\\\\react-native-wagmi-charts\\\\lib\\\\module\\\\charts\\\\candle\\\\utils.js (31:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["utils.ts"],"names":["values","rows","low","min","Math","max","maxHeight","interpolate","Extrapolate","y","domain"],"mappings":";AAAA,SAAA,WAAA,EAAA,WAAA,QAAA,yBAAA;AAIA,WAAO,SAAP;AAAA,uBAAO,IAAP,EAAuE;AAErE,QAAMA,MAAM,GAAGC,IAAI,CAAJA,GAAAA,CAAS;AAAA,UAAC,IAAD,QAAC,IAAD;AAAA,UAASC,GAAT,QAASA,GAAT;AAAA,aAAmB,CAAA,IAAA,EAA5BD,GAA4B,CAAnB;AAAA,KAATA,EAAf,IAAeA,EAAf;AACA,QAAME,GAAG,GAAGC,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAhB,MAAgB,EAAhB;AACA,QAAMC,GAAG,GAAGD,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAhB,MAAgB,EAAhB;AACA,WAAO,CAACD,GAAG,GAAG,CAACE,GAAG,GAAJ,GAAA,IAAP,KAAA,EAA4BA,GAAG,GAAG,CAACA,GAAG,GAAJ,GAAA,IAAzC,KAAO,CAAP;AACD,GAND;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAQA,WAAO,IAAP;AAAA,8BAQG;AAAA,QARkB,KAQlB,SARkB,KAQlB;AAAA,QARkB,MAQlB,SARkB,MAQlB;AAAA,QALDC,SAKC,SALDA,SAKC;AAED,WAAOC,WAAW,CAAA,KAAA,EAAA,MAAA,EAAgB,CAAA,SAAA,EAAhB,CAAgB,CAAhB,EAAgCC,WAAW,CAA7D,KAAkB,CAAlB;AACD,GAXD;;AAAA;AAAA,iBANmCN,WAMnC;AAAA;AAAA,aANmCA,WAAAA,CAAAA;AAMnC;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAaA,WAAO,SAAP;AAAA,8BAQG;AAAA,QARuB,KAQvB,SARuB,KAQvB;AAAA,QARuB,MAQvB,SARuB,MAQvB;AAAA,QALDI,SAKC,SALDA,SAKC;AAED,WAAOC,WAAW,CAAA,KAAA,EAEhB,CAAA,CAAA,EAAIH,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAAJA,MAAI,EAAJA,GAAsBA,IAAI,CAAJA,GAAAA,OAAAA,IAAI,qBAFd,MAEc,EAA9B,CAFgB,EAGhB,CAAA,CAAA,EAHgB,SAGhB,CAHgB,EAIhBI,WAAW,CAJb,KAAkB,CAAlB;AAMD,GAhBD;;AAAA;AAAA,iBAnBmCN,WAmBnC;AAAA;AAAA,aAnBmCA,WAAAA,CAAAA;AAmBnC;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAkBA,WAAO,QAAP;AAAA,8BAQG;AAAA,QARsB,CAQtB,SARsB,CAQtB;AAAA,QARsB,MAQtB,SARsB,MAQtB;AAAA,QALDI,SAKC,SALDA,SAKC;AAED,QAAIG,CAAC,KAAK,CAAV,CAAA,EAAc,OAAO,CAAP,CAAA;AACd,WAAOF,WAAW,CAAA,CAAA,EAAI,CAAA,CAAA,EAAJ,SAAI,CAAJ,EAAoBG,MAAM,CAA1B,OAAoBA,EAApB,EAAsCF,WAAW,CAAnE,KAAkB,CAAlB;AACD,GAZD;;AAAA;AAAA,iBArC6C,WAqC7C;AAAA;AAAA,aArCE,WAAA,CAAA;AAqCF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA","sourcesContent":["import { interpolate, Extrapolate } from 'react-native-reanimated';\n\nimport type { TCandle, TDomain } from './types';\n\nexport function getDomain(rows: TCandle[]): [min: number, max: number] {\n  'worklet';\n  const values = rows.map(({ high, low }) => [high, low]).flat();\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  return [min - (max - min) * 0.025, max + (max - min) * 0.025];\n}\n\nexport function getY({\n  value,\n  domain,\n  maxHeight,\n}: {\n  value: number;\n  domain: TDomain;\n  maxHeight: number;\n}) {\n  'worklet';\n  return interpolate(value, domain, [maxHeight, 0], Extrapolate.CLAMP);\n}\n\nexport function getHeight({\n  value,\n  domain,\n  maxHeight,\n}: {\n  value: number;\n  domain: TDomain;\n  maxHeight: number;\n}) {\n  'worklet';\n  return interpolate(\n    value,\n    [0, Math.max(...domain) - Math.min(...domain)],\n    [0, maxHeight],\n    Extrapolate.CLAMP\n  );\n}\n\nexport function getPrice({\n  y,\n  domain,\n  maxHeight,\n}: {\n  y: number;\n  domain: TDomain;\n  maxHeight: number;\n}) {\n  'worklet';\n  if (y === -1) return -1;\n  return interpolate(y, [0, maxHeight], domain.reverse(), Extrapolate.CLAMP);\n}\n"]},"metadata":{},"sourceType":"module"}